# This names your workflow so you can see it in the GitHub Actions tab
name: Build and Push Docker Image

# This section defines when the workflow should run
on:
  push:
    branches: [ main ]    # Runs when you push to main branch
    tags: [ 'v*.*.*' ]   # Runs when you create a version tag (like v1.0.0)
  pull_request:
    branches: [ main ]    # Runs when someone creates a pull request to main

# These are variables used throughout the workflow
env:
  REGISTRY: ghcr.io                    # GitHub Container Registry address
  IMAGE_NAME: ${{ github.repository }} # Uses your repository name for the image

# The actual jobs that will run
jobs:
  build-and-push:
    runs-on: ubuntu-latest    # Uses Ubuntu to run the build
    permissions:              # Sets required permissions
      contents: read         # Can read your repository
      packages: write        # Can push to GitHub packages

    steps:
      # Step 1: Gets your code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Logs into the GitHub Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Prepares metadata for the Docker image
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha

      # Step 4: Builds your Docker image and pushes it to the registry
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .                                    # Uses files from your repository
          push: ${{ github.event_name != 'pull_request' }} # Pushes only on main branch, not PRs
          tags: ${{ steps.meta.outputs.tags }}         # Uses the tags we created
          labels: ${{ steps.meta.outputs.labels }}
